"use strict";

var Readable = require('stream').Readable;

var QR = require('./qr-base').QR;

var BITMAP_OPTIONS = {
    parse_url: false,
    ec_level: 'M',
    size: 5,
    margin: 4,
    customize: null
};

var VECTOR_OPTIONS = {
    parse_url: false,
    ec_level: 'M',
    margin: 1,
    size: 0
};

function get_options(options, force_type) {
    if (typeof options === 'string') {
        options = { 'ec_level': options }
    } else {
        options = options || {};
    }
    var _options = {
        type: String(force_type || options.type || 'png').toLowerCase()
    };

    var defaults = _options.type == 'png' ? BITMAP_OPTIONS : VECTOR_OPTIONS;

    for (var k in defaults) {
        _options[k] = k in options ? options[k] : defaults[k];
    }

    return _options;
}

function qr_image(text, options) {
    options.type = 'svg';
    if (!text) {
        return false;
    }
    //////////////////////PROCESS OPTIONS/////////////////////
    options.shape = options.shape ? options.shape : 'default';
    options.color = options.color ? options.color : 'black';
    options.margin = options.margin ? options.margin : 0;
    options.background = options.background ? options.background : 'rgba(0,0,0,0)';
    options.fill = options.fill ? options.fill : 'solid';
    options.eye_frame = options.eye_frame ? options.eye_frame : 'default';
    options.eye = options.eye ? options.eye : 'default';
    let customization = options;


    var matrix = QR(text, options.ec_level, options.parse_url);
    let return_stream = '';
    let qr_dimensions = (matrix[0].length) * 6;
    return_stream += `<svg viewBox="0 0 ${((matrix[0].length) * 6) + (customization.margin * 2)} ${((matrix[0].length) * 6) + (customization.margin * 2)}" xmlns="http://www.w3.org/2000/svg">
    <rect x="0" y="0" width="${((matrix[0].length) * 6) + (customization.margin * 2)}" height="${((matrix[0].length) * 6) + (customization.margin * 2)}" fill="${customization.background}" />
    <g transform="translate(${customization.margin},${customization.margin})"><g><defs><mask id="gmask"><g>`;

    ////////////////////////////////////////////////////////////////////
    ////////////////////////CREATE QR BODY//////////////////////////////
    ////////////////////////////////////////////////////////////////////

    for (var i = 0; i < matrix.length; i++) {
        for (var j = 0; j < matrix[i].length; j++) {
            if (!(i < 7 && j < 7) && !(i > (matrix.length - 8) && j < 7) && !(i < 7 && j > (matrix.length - 8))) {
                if ((matrix[i][j]) == 1) {
                    if (customization.shape == '3') {
                        return_stream += `<polygon transform="translate(${(j*6)} ${(i*6)}) scale(0.045)" style="fill: rgb(255, 255, 255);" points="0,50 50,100 100,50 50,0"/>`
                    } else if (customization.shape == '2') {
                        return_stream += `<path transform="translate(${(j*6)} ${(i*6)}) scale(0.06)" style="fill: rgb(255, 255, 255);fill-rule:evenodd;clip-rule:evenodd;" d="M49.984,99.824C45.848,69.47,28.497,53.961-0.345,49.773
                        c29.054-3.697,45.791-19.659,50.348-49.949c4.404,29.487,20.907,45.691,49.652,49.975C70.729,54.051,54.532,70.407,49.984,99.824z"/>`
                    } else if (customization.shape == '1') {
                        return_stream += `<circle style="fill: rgb(255, 255, 255);" cx="${(j*6) + 3}" cy="${(i*6)+3}" r="2" />`;
                    } else {
                        return_stream += `<rect style="fill: rgb(255, 255, 255);" x="${j*6}" y="${i*6}" width="6" height="6" />`;
                    }
                }
            }
        }
    }

    ////////////////////////////////////////////////////////////////////
    ////////////////////CREATE QR EYE //////////////////////////////////
    ////////////////////////////////////////////////////////////////////
    return_stream += geteye(matrix.length, customization.eye);
    return_stream += geteyeframe(matrix.length, customization.eye_frame);

    return_stream += setcolors(((matrix[0].length) * 6) + (customization.margin * 2), customization);
    return return_stream;
}

function geteye(x, customization) {
    let eye = '';
    if (customization == 'rotary') {
        eye = `<path style="fill:rgb(255,255,255)" transform="translate(42,20) scale(0.007)" d="M00 5695l-203 246 -61 -53 211 -237c-35,-36 -62,-62 -97,-88l53 -53c79,79 150,141 238,211l-44 53c-27,-27 -62,-53 -97,-79l0 0 0 0zm-405 -599l-335 194c9,17 27,44 36,70l334 -194c-17,-35 -26,-44 -35,-70l0 0zm211 308l-185 159 97 -273c-17,-18 -26,-36 -44,-62l-326 220c18,26 36,44 53,70l194 -140 -88 273c9,17 26,44 53,61l299 -255c-18,-18 -44,-35 -53,-53l0 0 0 0zm440 475c53,27 97,62 159,88l35 -61c-79,-35 -158,-88 -220,-132l-220 325c79,53 158,97 246,150l36 -62 -177 -105 53 -79 124 70 26 -53c-35,-26 -70,-44 -115,-70l53 -71 0 0zm1083 -1197c-308,0 -555,-246 -555,-554 0,-300 247,-555 555,-555 299,0 546,255 546,555 0,308 -247,554 -546,554l0 0zm9 -185c194,0 361,-167 361,-369 0,-168 -115,-308 -273,-352 0,-18 -9,-88 -9,-88l-185 0c0,0 0,79 -9,96 -149,44 -255,185 -255,344 0,202 167,369 370,369l0 0 0 0zm-810 -2447l0 -17c-9,-106 70,-185 176,-194 106,-9 194,70 203,176l0 18c0,96 -71,184 -177,193 -105,9 -193,-70 -202,-176l0 0zm70 -9c0,71 62,115 132,115 62,-9 115,-62 115,-123 0,-9 0,-9 0,-18 -9,-62 -71,-114 -141,-106 -62,0 -114,53 -106,124l0 8 0 0zm801 97c-35,0 -52,0 -79,0l97 -202 88 -176 79 8 53 168 62 229c-35,0 -53,-9 -79,-9l-27 -71c-53,-8 -105,-8 -158,-17l-36 70 0 0zm62 -132c44,0 79,9 123,9l-26 -79 -26 -79 -36 79 -35 70zm-387 -176l35 317 88 -9 -35 -308 123 -9 0 -70c-141,9 -202,9 -334,35l8 62 115 -18 0 0zm17 4278l-26 229 -114 -255c-27,-9 -44,-9 -71,-18l-88 379c26,9 53,17 79,17l53 -228 115 255c26,9 52,17 79,9l44 -388c-18,0 -44,0 -71,0l0 0zm2236 -818l-281 -159 -36 62 335 193 132 -237 -53 -27 -97 168 0 0zm-422 52l378 124c-9,17 -17,26 -17,35 -9,9 -18,17 -27,35l-61 -26 -106 132 35 61c-17,18 -35,36 -53,53l-149 -255 -62 -88 62 -71 0 0zm44 88l44 71 35 79 62 -79 17 -18 -158 -53zm-405 520c9,26 17,61 26,97 0,26 -9,52 -17,70 -18,44 -44,71 -88,97 -88,53 -203,18 -256,-71 -8,-8 -8,-17 -8,-26 -18,-18 -18,-44 -18,-70 0,-71 35,-132 97,-168 88,-52 202,-26 264,71l0 0 0 0zm-44 97c0,-27 -9,-44 -18,-71 -35,-53 -114,-79 -167,-44 -44,27 -62,71 -62,115 0,17 0,35 18,61 0,0 0,9 9,18 35,44 105,53 149,26 18,-9 27,-17 36,-26 17,-27 35,-53 35,-79l0 0 0 0zm185 -467l158 176 -273 -79c-17,18 -35,18 -53,35l229 317c27,-18 44,-35 62,-53l-141 -185 273 80c18,-18 44,-36 62,-53l-273 -291c-9,18 -27,35 -44,53l0 0 0 0zm1716 -1452c0,35 0,79 0,105l0 9 -9 0c-132,79 -299,123 -475,132 0,18 -18,167 -18,194 159,44 309,132 414,237l9 9 0 9c-9,62 -35,141 -62,194l0 9 -8 0c-150,44 -317,44 -485,0 -8,17 -61,167 -70,184 141,88 264,212 335,344l8 9 -8 8c-18,53 -62,124 -97,168l0 8 -18 0c-150,0 -317,-44 -466,-123 -9,18 -106,150 -124,167 115,115 203,273 238,423l9 0 -9 9c-35,44 -97,105 -141,141l0 8 -17 0c-141,-44 -300,-132 -414,-246 -18,9 -141,106 -159,123 80,141 124,308 124,458l0 17 -9 9c-44,36 -123,80 -176,97l0 0 -9 0c-132,-79 -255,-202 -343,-343 -18,9 -168,70 -194,79 26,79 35,167 35,247 0,88 -9,167 -35,246l0 0 -9 9c-44,17 -132,44 -185,53l-17 0 0 -9c-115,-106 -203,-255 -247,-414 -17,0 -176,18 -193,26 0,168 -53,335 -133,467l0 9 -8 0c-53,9 -141,9 -203,0l0 0 -9 -9c-79,-132 -123,-299 -123,-467 -26,-8 -185,-26 -211,-26 -44,159 -132,308 -238,414l-9 9 -8 0c-62,-9 -141,-36 -194,-62l-9 0 0 -9c-17,-70 -35,-158 -35,-237 0,-80 18,-168 35,-247 -17,-9 -158,-62 -185,-70 -88,140 -211,272 -343,343l-9 0 -9 0c-52,-26 -123,-62 -167,-97l-9 -9 0 -17c0,-150 44,-317 124,-458 -18,-18 -150,-115 -168,-123 -114,114 -273,202 -413,237l-9 0 -9 0c-44,-44 -106,-96 -141,-140l-9 -9 9 -9c35,-150 123,-299 238,-423 -9,-17 -115,-140 -123,-167 -150,88 -317,132 -467,132l-9 0 -9 -9c-35,-44 -79,-123 -96,-176l-9 -8 9 0c79,-141 202,-265 343,-344 -9,-26 -71,-167 -79,-185 -168,36 -344,36 -484,0l-9 -8 -9 0c-18,-53 -35,-141 -44,-194l-9 -9 9 -9c106,-114 255,-193 422,-246 0,-18 -26,-185 -26,-203 -176,-8 -343,-52 -475,-132l-9 0 0 -9c0,-26 0,-61 0,-96 0,-36 0,-71 0,-106l0 -9 9 0c132,-79 299,-123 475,-123 0,-26 18,-185 26,-202 -167,-53 -316,-133 -422,-247l-9 0 0 -9c9,-61 35,-149 53,-193l9 -9 9 0c140,-44 316,-44 484,-9 8,-18 61,-158 70,-185 -141,-79 -264,-202 -343,-343l0 -9 0 0c26,-53 70,-132 105,-176l0 -9 9 0c159,0 326,44 467,132 17,-17 114,-158 132,-176 -115,-114 -203,-264 -247,-414l0 -8 0 -9c44,-44 106,-106 150,-141l9 0 0 0c149,35 308,123 422,238 18,-9 132,-106 150,-115 -79,-141 -123,-308 -123,-458l0 -17 9 -9c44,-35 114,-79 176,-97l0 -9 8 9c132,71 256,194 344,343 17,-8 176,-79 193,-88 -17,-79 -26,-158 -26,-246 0,-79 9,-158 26,-238l9 -8 9 0c44,-27 132,-45 185,-53l9 0 8 0c106,114 194,264 247,422 18,0 185,-17 202,-26 0,-167 53,-335 132,-467l0 -9 9 0c53,-8 141,-8 203,0l0 0 8 9c80,132 124,300 124,467 26,9 185,26 202,26 53,-158 141,-308 247,-414l8 -8 9 0c53,8 141,26 194,53l0 0 9 8c17,80 26,159 26,238 0,88 -9,167 -26,246 17,9 167,80 193,88 80,-149 203,-272 344,-343l0 -9 9 9c52,18 132,62 176,97l8 9 0 17c0,150 -52,317 -132,458 18,9 150,115 168,123 114,-114 272,-202 422,-237l0 -9 9 9c44,35 106,97 141,141l9 8 -9 9c-35,150 -123,299 -238,423 9,17 106,141 123,158 150,-79 317,-123 467,-123l9 0 8 9c36,44 80,123 97,167l9 9 -9 9c-79,132 -202,255 -343,343 9,26 70,167 79,185 159,-35 335,-44 484,0l9 0 0 9c18,52 44,132 53,193l0 9 -9 9c-105,105 -255,193 -414,238 0,26 18,184 27,202 167,9 334,53 466,132l9 0 0 9c0,26 0,61 0,97l0 0 0 0zm-4612 -1787l246 281c35,36 79,27 123,-8 326,-256 731,-405 1171,-405 431,0 845,149 1171,405 44,35 88,44 123,8l255 -281c27,-36 27,-80 -26,-124 -431,-334 -951,-537 -1523,-537 -572,0 -1109,203 -1523,537 -53,44 -53,88 -17,124l0 0zm8 1179c-26,-17 -52,-35 -79,-26 -17,9 -35,26 -44,61 -114,405 -114,749 0,1154 9,26 18,52 44,52 18,9 44,0 79,-26l784 -528c35,-18 53,-53 53,-79 0,-27 -18,-53 -53,-71l-784 -537 0 0zm176 -466c0,26 36,44 62,53l854 413c35,18 62,18 88,9 26,-18 44,-44 44,-79l70 -951c0,-44 0,-70 -17,-79 -18,-18 -44,-18 -71,-9 -413,97 -704,273 -1003,572 -18,27 -35,53 -27,71l0 0 0 0zm9 2165c0,9 18,35 35,53 291,308 590,484 995,581 27,9 53,9 71,-9 17,-9 26,-35 26,-79 0,-9 -70,-951 -70,-951 -9,-35 -18,-61 -44,-79 -27,-18 -53,-18 -88,0l-854 414c-27,17 -62,35 -71,61 0,0 0,0 0,9l0 0 0 0zm1347 -475c335,0 607,-282 607,-616 0,-335 -272,-608 -607,-608 -334,0 -616,273 -616,608 0,334 282,616 616,616l0 0zm255 1091c18,9 36,18 80,0 404,-96 704,-264 994,-572 18,-17 35,-44 27,-61 0,-27 -18,-44 -62,-62l-854 -414c-35,-17 -61,-17 -88,0 -26,18 -44,44 -44,79l-70 942c0,36 0,71 17,88l0 0 0 0zm1277 -1100c26,18 53,35 79,26 18,-8 35,-26 44,-61 123,-405 123,-748 0,-1153 -9,-27 -18,-53 -44,-62 -18,-9 -44,0 -79,26l-784 537c-35,18 -44,44 -44,71 0,35 9,61 44,79l784 537 0 0zm-176 -1699c0,-18 -9,-35 -27,-53 -290,-308 -590,-484 -1003,-581 -27,-9 -53,-9 -71,9 -17,9 -17,35 -17,79l70 951c0,35 18,62 44,79 27,18 53,9 88,-9l854 -404c26,-18 53,-27 62,-62 0,0 0,0 0,-9l0 0 0 0zm-3645 1690l361 -105c35,-9 71,-44 62,-88 -132,-678 35,-1224 431,-1664 44,-27 44,-88 9,-123l-264 -264c-26,-36 -71,-36 -115,8 -501,528 -757,1347 -572,2183 9,44 44,71 88,53l0 0zm4516 203l-361 -132c-17,0 -70,0 -97,61 -290,705 -977,1189 -1769,1189 -792,0 -1496,-493 -1778,-1198 -18,-52 -71,-52 -88,-52l-361 132c-44,9 -62,44 -44,97 361,906 1241,1549 2271,1549 1030,0 1910,-652 2271,-1558 18,-44 0,-79 -44,-88l0 0 0 0zm-422 -2447c-36,-44 -88,-36 -106,0l-264 264c-44,35 -35,96 0,123 396,440 563,986 440,1664 -9,44 18,79 53,88l370 105c44,18 79,-9 88,-53 184,-836 -71,-1655 -581,-2191l0 0 0 0zm-845 -97l88 -159 220 -105c-18,-18 -44,-27 -71,-44l-158 70 -27 -167c-35,-18 -52,-27 -88,-35l44 246 -79 158 71 36 0 0zm-423 3662c-114,26 -202,44 -308,61l9 62c35,0 79,-9 123,-18l53 317 88 -17 -71 -309c44,-8 80,-26 124,-35l-18 -61zm-1109 52l0 18c-9,53 -44,106 -97,115l9 184c-27,-8 -53,-17 -79,-26l0 -176 -80 -26 -61 149c-27,-9 -53,-17 -79,-35l79 -176 9 -27 70 -149 167 70c44,9 62,44 62,79l0 0zm-71 0c0,-8 -8,-17 -17,-26l-97 -35 -26 61 -9 27 0 0 88 35c26,9 53,-18 61,-35 0,-9 0,-18 0,-27l0 0 0 0zm1180 -3890c-35,-9 -53,-18 -88,-27l62 -211 44 -150c70,9 132,36 193,53 36,9 53,53 62,97 0,62 -26,123 -88,132l17 176c-26,-9 -44,-18 -79,-35l-17 -150 -71 -17 -35 132 0 0zm53 -203l88 27c17,8 53,-27 53,-62 0,-18 -9,-26 -27,-35 -35,-9 -53,-18 -88,-27l-17 62 -9 35 0 0zm-423 4278l80 203c-27,0 -53,9 -71,9l-26 -71 -168 9 -26 70c-26,-8 -44,-8 -70,-8l70 -212 53 -167 0 0 88 -9 0 18 70 158 0 0zm-53 71l-26 -71 -35 -79 -27 79 -26 80 114 -9 0 0zm511 -344l132 370c27,-9 53,-17 79,-26l-123 -370c-35,18 -53,18 -88,26l0 0 0 0zm-1857 -3855l-18 -44c53,-35 114,-62 167,-97 71,-35 168,53 168,141 -9,9 -9,26 -18,35l141 106c-27,8 -44,17 -79,35l-124 -88 -70 35 79 123c-35,18 -53,27 -79,44l-167 -290 0 0zm88 -27l8 27 36 61 79 -44c9,0 18,-8 18,-17 0,-44 -27,-88 -62,-71 -35,18 -53,27 -79,44z"/>
                <circle style="fill:rgb(255,255,255)" cx="52" cy="48.5" r="18"/>`;
    } else if (customization == '4') {
        eye = `<path  transform="translate(75,75) scale(-0.5)" style="fill:rgb(255,255,255);"  d="M100.061,99.984V0h-100l0.028,72.369C0.088,87.602,12.27,100,27.226,100h45.528c4.682,0,11.508,0,17.171-0.016C95.574,99.984,100.061,99.984,100.061,99.984z"/>`
    } else if (customization == '3') {
        eye = `<path transform="translate(25,25) scale(0.5)" style="fill:rgb(255,255,255);" d="M72.744-0.021H27.23c-2.341,0-4.612,0.297-6.771,0.875C15.679,2.11,11.418,4.648,8.04,8.09 c-0.617,0.621-1.206,1.284-1.752,1.96c-3.883,4.767-6.21,10.903-6.21,17.561L0.05,99.979h72.694 c14.971,0,27.138-12.397,27.138-27.63V27.625v-0.014l0.168-27.617C100.05-0.006,82.107-0.021,72.744-0.021z"/>`
    } else if (customization == '2') {
        eye = `<path transform="translate(25,25) scale(0.5)" style="fill:rgb(255,255,255);" d="M100,72.779V27.195C100,12.203,87.604,0,72.37,0H27.63C12.397,0,0,12.203,0,27.195V100l72.37-0.042 C87.604,99.958,100,87.771,100,72.779z"/>`
    } else if (customization == '1') {
        eye = `<circle style="fill:rgb(255,255,255)" cx="50" cy="50" r="25"/>`;
    } else {
        eye = `<rect style="fill:rgb(255,255,255)" x="25" y="25" width="50" height="50"/>`;
    }
    return `<g transform="translate(42,0) scale(-0.4204,0.4204)">${eye}</g>
            <g transform="translate(42,${((x-7)*6)+42}) scale(-0.4204,-0.4204)">${eye}</g>
            <g transform="translate(${(x-7)*6},0) scale(0.4204)">${eye}</g>`
}

function geteyeframe(x, customization) {
    let eye_path = '';
    if (customization == 4) {
        eye_path = `<path style="fill:none;"  d="M33.78,85H85V15H15.004l0.016,50.855C15.02,76.414,23.436,85,33.78,85z"/>
                    <path fill="rgb(255,255,255)" transform="translate(100 100) scale(-1 -1)" d="M100,100V65.859V34.141C100,25.65,100,0,100,0S76.46,0,66.25,0H0l0.02,65.859C0.02,84.68,15.16,100,33.78,100h32.47H100z
                    M85,85H33.78c-10.344,0-18.76-8.586-18.76-19.145L15.004,15H85V85z"/>`
    } else if (customization == '3') {
        eye_path = `<path fill="none" d="M15.02,34.145L15.004,85H66.25C76.589,85,85,76.414,85,65.86V15H33.78C23.436,15,15.02,23.586,15.02,34.145z"/>
	                <path fill="rgb(255,255,255)" d="M66.25,0H33.78C15.16,0,0.02,15.32,0.02,34.14L0,100h66.25C84.86,100,100,84.68,100,65.86V34.14V0H66.25z M85,65.86
		            C85,76.414,76.589,85,66.25,85H15.004l0.016-50.855C15.02,23.586,23.436,15,33.78,15H85V65.86z"/>`;
    } else if (customization == '2') {
        eye_path = `<path style="fill:none;" d="M85,66.221V33.75C85,23.411,76.414,15,65.859,15H34.14C23.586,15,15,23.411,15,33.75v51.246
		        l50.855-0.016C76.414,84.98,85,76.564,85,66.221z"/>
                <path  style="fill:rgb(255,255,255);" d="M100,66.221V33.75C100,15.141,84.68,0,65.859,0H34.14C15.32,0,0,15.141,0,33.75V100l65.859-0.02
	            C84.68,99.98,100,84.84,100,66.221z M85,66.221c0,10.344-8.586,18.76-19.145,18.76L15,84.996V33.75C15,23.411,23.586,15,34.14,15
                h31.719C76.414,15,85,23.411,85,33.75V66.221z"/>`;
    } else if (customization == '1') {
        eye_path = `<path style="fill:none;" d="M51,16c-19.299,0-35,15.701-35,35s15.701,35,35,35s35-15.701,35-35S70.299,16,51,16z"/>
                    <path style="fill:rgb(255,255,255);" d="M51,1C23.387,1,1,23.387,1,51s22.387,50,50,50s50-22.387,50-50S78.613,1,51,1z M51,86c-19.299,0-35-15.701-35-35
                    s15.701-35,35-35s35,15.701,35,35S70.299,86,51,86z"/>`
    } else {
        eye_path = `<path style="fill:rgb(255,255,255);" d="M85,0H15H0v15v70v15h15h70h15V85V15V0H85z M85,85H15V15h70V85z"/>`
    }
    return `<g transform="translate(42,0) scale(-0.4204,0.4204)">${eye_path}</g>
                <g transform="translate(42,${((x-7)*6)+42}) scale(-0.4204,-0.4204)">${eye_path}</g>
                <g transform="translate(${(x-7)*6},0) scale(0.4204)">${eye_path}</g>`
}

var setcolors = function(x, options) {
    let a = '';
    if (options.fill == "linear-horizontal") {
        a = `</g></mask> <linearGradient gradientTransform="rotate(0)" id="grad">
                <stop offset="0%" stop-color="${(options.color.indexOf('.')!==-1)? options.color.split('.')[0] : 'rgba(0,0,0,1)'}" />
                <stop offset="100%" stop-color="${(options.color.indexOf('.')!==-1)? options.color.split('.')[1] : 'rgba(2,119,189,1)'}" />
            </linearGradient></defs></g><rect x="0" y="0" width="${x}" height="${x}" fill="url(#grad)" mask="url(#gmask)" /></g></svg>`;
    } else if (options.fill == "linear-vertical") {
        a = `</g></mask> <linearGradient gradientTransform="rotate(90)" id="grad">
                <stop offset="0%" stop-color="${(options.color.indexOf('.')!==-1)? options.color.split('.')[0] : 'rgba(0,0,0,1)'}" />
                <stop offset="100%" stop-color="${(options.color.indexOf('.')!==-1)? options.color.split('.')[1] : 'rgba(2,119,189,1)'}" />
            </linearGradient></defs></g><rect x="0" y="0" width="${x}" height="${x}" fill="url(#grad)" mask="url(#gmask)" /></g></svg>`;
    } else if (options.fill == "radial") {
        a = `</g></mask>
            <radialGradient id="grad">
                <stop offset="0%" style="stop-color:${(options.color.indexOf('.')!==-1)? options.color.split('.')[0] : 'rgba(0,0,0,1)'};" />
                <stop offset="100%" style="stop-color:${(options.color.indexOf('.')!==-1)? options.color.split('.')[1] : 'rgba(2,119,189,1)'};" />
            </radialGradient>
            </defs></g><rect x="0" y="0" width="${x}" height="${x}" fill="url(#grad)" mask="url(#gmask)" /></g></svg>`;
    } else {
        a = `</g></mask></defs></g><rect x="0" y="0" width="${x}" height="${x}" fill="${options.color}" mask="url(#gmask)" /></g></svg>`;
    }
    return a;
}
module.exports = {
    generate: qr_image
};